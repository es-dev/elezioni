#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace WcfService.Assemblers
{
	using Telerik.OpenAccess;
	using WcfService.Dto;
	using WcfService.Converters;
	using DataLayer;
	using System;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.Serialization;

			
	public partial interface IAssembler<TDto, TEntity>
	    where TEntity : class
	{
	    TDto Assemble(TEntity entity);
	    TEntity Assemble(TEntity entity, TDto dto);
	
	    IEnumerable<TDto> Assemble(IEnumerable<TEntity> entityList);
	    IEnumerable<TEntity> Assemble(IEnumerable<TDto> dtoList);
	}
	
	public abstract class Assembler<TDto, TEntity> : IAssembler<TDto, TEntity>
	    where TEntity : class
	{
	    public abstract TDto Assemble(TEntity domainEntity);
	    public abstract TEntity Assemble(TEntity entity, TDto dto);
	
	    public void AssembleNavigational(TEntity entity, TDto dto)
	    {
	    	this.AssembleReferences(entity, dto);
	    	this.AssembleCollections(entity, dto);
	    }
	
	    public abstract void AssembleReferences(TEntity entity, TDto dto);
	    public abstract void AssembleCollections(TEntity entity, TDto dto);
	
	
	    public virtual IEnumerable<TDto> Assemble(IEnumerable<TEntity> domainEntityList)
	    {
	        List<TDto> dtos = Activator.CreateInstance<List<TDto>>();
	        foreach (TEntity domainEntity in domainEntityList)
	        {
	            dtos.Add(Assemble(domainEntity));
	        }
	        return dtos;
	    }
	
	    public virtual IEnumerable<TEntity> Assemble(IEnumerable<TDto> dtoList)
	    {
	        List<TEntity> domainEntities = Activator.CreateInstance<List<TEntity>>();
	        foreach (TDto dto in dtoList)
	        {
	            domainEntities.Add(Assemble(null, dto));
	        }
	        return domainEntities;
	    }
	}
	
	public partial interface IConsultazioneAssembler : IAssembler<ConsultazioneDto, Consultazione>
	{ 
	
	}
	
	public partial class ConsultazioneAssemblerBase : Assembler<ConsultazioneDto, Consultazione>
	{
		/// <summary>
	    /// Invoked after the ConsultazioneDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ConsultazioneDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ConsultazioneDto dto);
	
		/// <summary>
	    /// Invoked after the Consultazione instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Consultazione"/> instance.</param>
		partial void OnEntityAssembled(Consultazione entity);
		
	    public override Consultazione Assemble(Consultazione entity, ConsultazioneDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Consultazione();
	        }
			
			entity.Id = dto.Id;
			entity.Numero = dto.Numero;
			entity.Descrizione = dto.Descrizione;
			entity.Tipo = dto.Tipo;
			entity.ComuneId = dto.ComuneId;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ConsultazioneDto Assemble(Consultazione entity)
	    {
	        ConsultazioneDto dto = new ConsultazioneDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Numero = entity.Numero;
			dto.Descrizione = entity.Descrizione;
			dto.Tipo = entity.Tipo;
			dto.ComuneId = entity.ComuneId;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Consultazione entity, ConsultazioneDto dto)
	    {
			ComuneAssembler comuneAssembler = new ComuneAssembler();
			dto.Comune = comuneAssembler.Assemble(entity.Comune);

	    }
	
	    public override void AssembleCollections(Consultazione entity, ConsultazioneDto dto)
	    {
			CollegioAssembler collegioAssembler = new CollegioAssembler();

			dto.Collegios = new List<CollegioDto>();
			foreach (Collegio item in entity.Collegios)
			{
				var dtoItem = collegioAssembler.Assemble(item);
				dtoItem.Consultazione = dto;
				dto.Collegios.Add(dtoItem);
			}

			AffluenzaAssembler affluenzaAssembler = new AffluenzaAssembler();

			dto.Affluenzas = new List<AffluenzaDto>();
			foreach (Affluenza item in entity.Affluenzas)
			{
				var dtoItem = affluenzaAssembler.Assemble(item);
				dtoItem.Consultazione = dto;
				dto.Affluenzas.Add(dtoItem);
			}

			ScrutinioAssembler scrutinioAssembler = new ScrutinioAssembler();

			dto.Scrutinios = new List<ScrutinioDto>();
			foreach (Scrutinio item in entity.Scrutinios)
			{
				var dtoItem = scrutinioAssembler.Assemble(item);
				dtoItem.Consultazione = dto;
				dto.Scrutinios.Add(dtoItem);
			}

			SedeElettoraleAssembler sedeElettoraleAssembler = new SedeElettoraleAssembler();

			dto.SedeElettorales = new List<SedeElettoraleDto>();
			foreach (SedeElettorale item in entity.SedeElettorales)
			{
				var dtoItem = sedeElettoraleAssembler.Assemble(item);
				dtoItem.Consultazione = dto;
				dto.SedeElettorales.Add(dtoItem);
			}

			OperatoreAssembler operatoreAssembler = new OperatoreAssembler();

			dto.Operatores = new List<OperatoreDto>();
			foreach (Operatore item in entity.Operatores)
			{
				var dtoItem = operatoreAssembler.Assemble(item);
				dtoItem.Consultazione = dto;
				dto.Operatores.Add(dtoItem);
			}

			CapoCoalizioneAssembler capoCoalizioneAssembler = new CapoCoalizioneAssembler();

			dto.CapoCoaliziones = new List<CapoCoalizioneDto>();
			foreach (CapoCoalizione item in entity.CapoCoaliziones)
			{
				var dtoItem = capoCoalizioneAssembler.Assemble(item);
				dtoItem.Consultazione = dto;
				dto.CapoCoaliziones.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class ConsultazioneAssembler : ConsultazioneAssemblerBase, IConsultazioneAssembler
	{
	    
	}
	
	public partial interface ICapoCoalizioneAssembler : IAssembler<CapoCoalizioneDto, CapoCoalizione>
	{ 
	
	}
	
	public partial class CapoCoalizioneAssemblerBase : Assembler<CapoCoalizioneDto, CapoCoalizione>
	{
		/// <summary>
	    /// Invoked after the CapoCoalizioneDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="CapoCoalizioneDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(CapoCoalizioneDto dto);
	
		/// <summary>
	    /// Invoked after the CapoCoalizione instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="CapoCoalizione"/> instance.</param>
		partial void OnEntityAssembled(CapoCoalizione entity);
		
	    public override CapoCoalizione Assemble(CapoCoalizione entity, CapoCoalizioneDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new CapoCoalizione();
	        }
			
			entity.Id = dto.Id;
			entity.Numero = dto.Numero;
			entity.Descrizione = dto.Descrizione;
			entity.Simbolo = dto.Simbolo;
			entity.ConsultazioneId = dto.ConsultazioneId;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override CapoCoalizioneDto Assemble(CapoCoalizione entity)
	    {
	        CapoCoalizioneDto dto = new CapoCoalizioneDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Numero = entity.Numero;
			dto.Descrizione = entity.Descrizione;
			dto.Simbolo = entity.Simbolo;
			dto.ConsultazioneId = entity.ConsultazioneId;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(CapoCoalizione entity, CapoCoalizioneDto dto)
	    {
			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();
			dto.Consultazione = consultazioneAssembler.Assemble(entity.Consultazione);

	    }
	
	    public override void AssembleCollections(CapoCoalizione entity, CapoCoalizioneDto dto)
	    {
			ListaAssembler listaAssembler = new ListaAssembler();

			dto.Listas = new List<ListaDto>();
			foreach (Lista item in entity.Listas)
			{
				var dtoItem = listaAssembler.Assemble(item);
				dtoItem.CapoCoalizione = dto;
				dto.Listas.Add(dtoItem);
			}

			ScrutinioCapoCoalizioneAssembler scrutinioCapoCoalizioneAssembler = new ScrutinioCapoCoalizioneAssembler();

			dto.ScrutinioCapoCoaliziones = new List<ScrutinioCapoCoalizioneDto>();
			foreach (ScrutinioCapoCoalizione item in entity.ScrutinioCapoCoaliziones)
			{
				var dtoItem = scrutinioCapoCoalizioneAssembler.Assemble(item);
				dtoItem.CapoCoalizione = dto;
				dto.ScrutinioCapoCoaliziones.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class CapoCoalizioneAssembler : CapoCoalizioneAssemblerBase, ICapoCoalizioneAssembler
	{
	    
	}
	
	public partial interface IListaAssembler : IAssembler<ListaDto, Lista>
	{ 
	
	}
	
	public partial class ListaAssemblerBase : Assembler<ListaDto, Lista>
	{
		/// <summary>
	    /// Invoked after the ListaDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ListaDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ListaDto dto);
	
		/// <summary>
	    /// Invoked after the Lista instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Lista"/> instance.</param>
		partial void OnEntityAssembled(Lista entity);
		
	    public override Lista Assemble(Lista entity, ListaDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Lista();
	        }
			
			entity.Id = dto.Id;
			entity.CapoCoalizioneId = dto.CapoCoalizioneId;
			entity.Numero = dto.Numero;
			entity.Descrizione = dto.Descrizione;
			entity.Simbolo = dto.Simbolo;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ListaDto Assemble(Lista entity)
	    {
	        ListaDto dto = new ListaDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.CapoCoalizioneId = entity.CapoCoalizioneId;
			dto.Numero = entity.Numero;
			dto.Descrizione = entity.Descrizione;
			dto.Simbolo = entity.Simbolo;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Lista entity, ListaDto dto)
	    {
			CapoCoalizioneAssembler capoCoalizioneAssembler = new CapoCoalizioneAssembler();
			dto.CapoCoalizione = capoCoalizioneAssembler.Assemble(entity.CapoCoalizione);

	    }
	
	    public override void AssembleCollections(Lista entity, ListaDto dto)
	    {
			CandidatoAssembler candidatoAssembler = new CandidatoAssembler();

			dto.Candidatos = new List<CandidatoDto>();
			foreach (Candidato item in entity.Candidatos)
			{
				var dtoItem = candidatoAssembler.Assemble(item);
				dtoItem.Lista = dto;
				dto.Candidatos.Add(dtoItem);
			}

			ScrutinioListaAssembler scrutinioListaAssembler = new ScrutinioListaAssembler();

			dto.ScrutinioListas = new List<ScrutinioListaDto>();
			foreach (ScrutinioLista item in entity.ScrutinioListas)
			{
				var dtoItem = scrutinioListaAssembler.Assemble(item);
				dtoItem.Lista = dto;
				dto.ScrutinioListas.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class ListaAssembler : ListaAssemblerBase, IListaAssembler
	{
	    
	}
	
	public partial interface ICandidatoAssembler : IAssembler<CandidatoDto, Candidato>
	{ 
	
	}
	
	public partial class CandidatoAssemblerBase : Assembler<CandidatoDto, Candidato>
	{
		/// <summary>
	    /// Invoked after the CandidatoDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="CandidatoDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(CandidatoDto dto);
	
		/// <summary>
	    /// Invoked after the Candidato instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Candidato"/> instance.</param>
		partial void OnEntityAssembled(Candidato entity);
		
	    public override Candidato Assemble(Candidato entity, CandidatoDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Candidato();
	        }
			
			entity.Id = dto.Id;
			entity.ListaId = dto.ListaId;
			entity.Numero = dto.Numero;
			entity.Cognome = dto.Cognome;
			entity.Nome = dto.Nome;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override CandidatoDto Assemble(Candidato entity)
	    {
	        CandidatoDto dto = new CandidatoDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.ListaId = entity.ListaId;
			dto.Numero = entity.Numero;
			dto.Cognome = entity.Cognome;
			dto.Nome = entity.Nome;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Candidato entity, CandidatoDto dto)
	    {
			ListaAssembler listaAssembler = new ListaAssembler();
			dto.Lista = listaAssembler.Assemble(entity.Lista);

	    }
	
	    public override void AssembleCollections(Candidato entity, CandidatoDto dto)
	    {
			ScrutinioCandidatoAssembler scrutinioCandidatoAssembler = new ScrutinioCandidatoAssembler();

			dto.ScrutinioCandidatos = new List<ScrutinioCandidatoDto>();
			foreach (ScrutinioCandidato item in entity.ScrutinioCandidatos)
			{
				var dtoItem = scrutinioCandidatoAssembler.Assemble(item);
				dtoItem.Candidato = dto;
				dto.ScrutinioCandidatos.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class CandidatoAssembler : CandidatoAssemblerBase, ICandidatoAssembler
	{
	    
	}
	
	public partial interface ISedeElettoraleAssembler : IAssembler<SedeElettoraleDto, SedeElettorale>
	{ 
	
	}
	
	public partial class SedeElettoraleAssemblerBase : Assembler<SedeElettoraleDto, SedeElettorale>
	{
		/// <summary>
	    /// Invoked after the SedeElettoraleDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="SedeElettoraleDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(SedeElettoraleDto dto);
	
		/// <summary>
	    /// Invoked after the SedeElettorale instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="SedeElettorale"/> instance.</param>
		partial void OnEntityAssembled(SedeElettorale entity);
		
	    public override SedeElettorale Assemble(SedeElettorale entity, SedeElettoraleDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new SedeElettorale();
	        }
			
			entity.Id = dto.Id;
			entity.Indirizzo = dto.Indirizzo;
			entity.Mappa = dto.Mappa;
			entity.Telefono = dto.Telefono;
			entity.Fax = dto.Fax;
			entity.Responsabile = dto.Responsabile;
			entity.ConsultazioneId = dto.ConsultazioneId;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override SedeElettoraleDto Assemble(SedeElettorale entity)
	    {
	        SedeElettoraleDto dto = new SedeElettoraleDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Indirizzo = entity.Indirizzo;
			dto.Mappa = entity.Mappa;
			dto.Telefono = entity.Telefono;
			dto.Fax = entity.Fax;
			dto.Responsabile = entity.Responsabile;
			dto.ConsultazioneId = entity.ConsultazioneId;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(SedeElettorale entity, SedeElettoraleDto dto)
	    {
			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();
			dto.Consultazione = consultazioneAssembler.Assemble(entity.Consultazione);

	    }
	
	    public override void AssembleCollections(SedeElettorale entity, SedeElettoraleDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();

			dto.Seziones = new List<SezioneDto>();
			foreach (Sezione item in entity.Seziones)
			{
				var dtoItem = sezioneAssembler.Assemble(item);
				dtoItem.SedeElettorale = dto;
				dto.Seziones.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class SedeElettoraleAssembler : SedeElettoraleAssemblerBase, ISedeElettoraleAssembler
	{
	    
	}
	
	public partial interface ISezioneAssembler : IAssembler<SezioneDto, Sezione>
	{ 
	
	}
	
	public partial class SezioneAssemblerBase : Assembler<SezioneDto, Sezione>
	{
		/// <summary>
	    /// Invoked after the SezioneDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="SezioneDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(SezioneDto dto);
	
		/// <summary>
	    /// Invoked after the Sezione instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Sezione"/> instance.</param>
		partial void OnEntityAssembled(Sezione entity);
		
	    public override Sezione Assemble(Sezione entity, SezioneDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Sezione();
	        }
			
			entity.Id = dto.Id;
			entity.VotantiMaschi = dto.VotantiMaschi;
			entity.VotantiFemmine = dto.VotantiFemmine;
			entity.TotaleVotanti = dto.TotaleVotanti;
			entity.SedeElettoraleId = dto.SedeElettoraleId;
			entity.OperatoreId = dto.OperatoreId;
			entity.Numero = dto.Numero;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override SezioneDto Assemble(Sezione entity)
	    {
	        SezioneDto dto = new SezioneDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.VotantiMaschi = entity.VotantiMaschi;
			dto.VotantiFemmine = entity.VotantiFemmine;
			dto.TotaleVotanti = entity.TotaleVotanti;
			dto.SedeElettoraleId = entity.SedeElettoraleId;
			dto.OperatoreId = entity.OperatoreId;
			dto.Numero = entity.Numero;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Sezione entity, SezioneDto dto)
	    {
			SedeElettoraleAssembler sedeElettoraleAssembler = new SedeElettoraleAssembler();
			dto.SedeElettorale = sedeElettoraleAssembler.Assemble(entity.SedeElettorale);

			OperatoreAssembler operatoreAssembler = new OperatoreAssembler();
			dto.Operatore = operatoreAssembler.Assemble(entity.Operatore);

	    }
	
	    public override void AssembleCollections(Sezione entity, SezioneDto dto)
	    {
			SezioneCollegioAssembler sezioneCollegioAssembler = new SezioneCollegioAssembler();

			dto.SezioneCollegios = new List<SezioneCollegioDto>();
			foreach (SezioneCollegio item in entity.SezioneCollegios)
			{
				var dtoItem = sezioneCollegioAssembler.Assemble(item);
				dtoItem.Sezione = dto;
				dto.SezioneCollegios.Add(dtoItem);
			}

			RilevamentoAssembler rilevamentoAssembler = new RilevamentoAssembler();

			dto.Rilevamentos = new List<RilevamentoDto>();
			foreach (Rilevamento item in entity.Rilevamentos)
			{
				var dtoItem = rilevamentoAssembler.Assemble(item);
				dtoItem.Sezione = dto;
				dto.Rilevamentos.Add(dtoItem);
			}

			ScrutinioAssembler scrutinioAssembler = new ScrutinioAssembler();

			dto.Scrutinios = new List<ScrutinioDto>();
			foreach (Scrutinio item in entity.Scrutinios)
			{
				var dtoItem = scrutinioAssembler.Assemble(item);
				dtoItem.Sezione = dto;
				dto.Scrutinios.Add(dtoItem);
			}

			ScrutinioListaAssembler scrutinioListaAssembler = new ScrutinioListaAssembler();

			dto.ScrutinioListas = new List<ScrutinioListaDto>();
			foreach (ScrutinioLista item in entity.ScrutinioListas)
			{
				var dtoItem = scrutinioListaAssembler.Assemble(item);
				dtoItem.Sezione = dto;
				dto.ScrutinioListas.Add(dtoItem);
			}

			ScrutinioCandidatoAssembler scrutinioCandidatoAssembler = new ScrutinioCandidatoAssembler();

			dto.ScrutinioCandidatos = new List<ScrutinioCandidatoDto>();
			foreach (ScrutinioCandidato item in entity.ScrutinioCandidatos)
			{
				var dtoItem = scrutinioCandidatoAssembler.Assemble(item);
				dtoItem.Sezione = dto;
				dto.ScrutinioCandidatos.Add(dtoItem);
			}

			ScrutinioCapoCoalizioneAssembler scrutinioCapoCoalizioneAssembler = new ScrutinioCapoCoalizioneAssembler();

			dto.ScrutinioCapoCoaliziones = new List<ScrutinioCapoCoalizioneDto>();
			foreach (ScrutinioCapoCoalizione item in entity.ScrutinioCapoCoaliziones)
			{
				var dtoItem = scrutinioCapoCoalizioneAssembler.Assemble(item);
				dtoItem.Sezione = dto;
				dto.ScrutinioCapoCoaliziones.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class SezioneAssembler : SezioneAssemblerBase, ISezioneAssembler
	{
	    
	}
	
	public partial interface IAffluenzaAssembler : IAssembler<AffluenzaDto, Affluenza>
	{ 
	
	}
	
	public partial class AffluenzaAssemblerBase : Assembler<AffluenzaDto, Affluenza>
	{
		/// <summary>
	    /// Invoked after the AffluenzaDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="AffluenzaDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(AffluenzaDto dto);
	
		/// <summary>
	    /// Invoked after the Affluenza instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Affluenza"/> instance.</param>
		partial void OnEntityAssembled(Affluenza entity);
		
	    public override Affluenza Assemble(Affluenza entity, AffluenzaDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Affluenza();
	        }
			
			entity.Id = dto.Id;
			entity.ConsultazioneId = dto.ConsultazioneId;
			entity.Orario = dto.Orario;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override AffluenzaDto Assemble(Affluenza entity)
	    {
	        AffluenzaDto dto = new AffluenzaDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.ConsultazioneId = entity.ConsultazioneId;
			dto.Orario = entity.Orario;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Affluenza entity, AffluenzaDto dto)
	    {
			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();
			dto.Consultazione = consultazioneAssembler.Assemble(entity.Consultazione);

	    }
	
	    public override void AssembleCollections(Affluenza entity, AffluenzaDto dto)
	    {
			RilevamentoAssembler rilevamentoAssembler = new RilevamentoAssembler();

			dto.Rilevamentos = new List<RilevamentoDto>();
			foreach (Rilevamento item in entity.Rilevamentos)
			{
				var dtoItem = rilevamentoAssembler.Assemble(item);
				dtoItem.Affluenza = dto;
				dto.Rilevamentos.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class AffluenzaAssembler : AffluenzaAssemblerBase, IAffluenzaAssembler
	{
	    
	}
	
	public partial interface IComuneAssembler : IAssembler<ComuneDto, Comune>
	{ 
	
	}
	
	public partial class ComuneAssemblerBase : Assembler<ComuneDto, Comune>
	{
		/// <summary>
	    /// Invoked after the ComuneDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ComuneDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ComuneDto dto);
	
		/// <summary>
	    /// Invoked after the Comune instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Comune"/> instance.</param>
		partial void OnEntityAssembled(Comune entity);
		
	    public override Comune Assemble(Comune entity, ComuneDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Comune();
	        }
			
			entity.Id = dto.Id;
			entity.Descrizione = dto.Descrizione;
			entity.Nome = dto.Nome;
			entity.Provincia = dto.Provincia;
			entity.CodiceISTAT = dto.CodiceISTAT;
			entity.NumeroSezioni = dto.NumeroSezioni;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ComuneDto Assemble(Comune entity)
	    {
	        ComuneDto dto = new ComuneDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Descrizione = entity.Descrizione;
			dto.Nome = entity.Nome;
			dto.Provincia = entity.Provincia;
			dto.CodiceISTAT = entity.CodiceISTAT;
			dto.NumeroSezioni = entity.NumeroSezioni;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Comune entity, ComuneDto dto)
	    {
	    }
	
	    public override void AssembleCollections(Comune entity, ComuneDto dto)
	    {
			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();

			dto.Consultaziones = new List<ConsultazioneDto>();
			foreach (Consultazione item in entity.Consultaziones)
			{
				var dtoItem = consultazioneAssembler.Assemble(item);
				dtoItem.Comune = dto;
				dto.Consultaziones.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class ComuneAssembler : ComuneAssemblerBase, IComuneAssembler
	{
	    
	}
	
	public partial interface ICollegioAssembler : IAssembler<CollegioDto, Collegio>
	{ 
	
	}
	
	public partial class CollegioAssemblerBase : Assembler<CollegioDto, Collegio>
	{
		/// <summary>
	    /// Invoked after the CollegioDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="CollegioDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(CollegioDto dto);
	
		/// <summary>
	    /// Invoked after the Collegio instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Collegio"/> instance.</param>
		partial void OnEntityAssembled(Collegio entity);
		
	    public override Collegio Assemble(Collegio entity, CollegioDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Collegio();
	        }
			
			entity.Id = dto.Id;
			entity.ConsultazioneId = dto.ConsultazioneId;
			entity.Numero = dto.Numero;
			entity.Descrizione = dto.Descrizione;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override CollegioDto Assemble(Collegio entity)
	    {
	        CollegioDto dto = new CollegioDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.ConsultazioneId = entity.ConsultazioneId;
			dto.Numero = entity.Numero;
			dto.Descrizione = entity.Descrizione;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Collegio entity, CollegioDto dto)
	    {
			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();
			dto.Consultazione = consultazioneAssembler.Assemble(entity.Consultazione);

	    }
	
	    public override void AssembleCollections(Collegio entity, CollegioDto dto)
	    {
			SezioneCollegioAssembler sezioneCollegioAssembler = new SezioneCollegioAssembler();

			dto.SezioneCollegios = new List<SezioneCollegioDto>();
			foreach (SezioneCollegio item in entity.SezioneCollegios)
			{
				var dtoItem = sezioneCollegioAssembler.Assemble(item);
				dtoItem.Collegio = dto;
				dto.SezioneCollegios.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class CollegioAssembler : CollegioAssemblerBase, ICollegioAssembler
	{
	    
	}
	
	public partial interface ISezioneCollegioAssembler : IAssembler<SezioneCollegioDto, SezioneCollegio>
	{ 
	
	}
	
	public partial class SezioneCollegioAssemblerBase : Assembler<SezioneCollegioDto, SezioneCollegio>
	{
		/// <summary>
	    /// Invoked after the SezioneCollegioDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="SezioneCollegioDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(SezioneCollegioDto dto);
	
		/// <summary>
	    /// Invoked after the SezioneCollegio instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="SezioneCollegio"/> instance.</param>
		partial void OnEntityAssembled(SezioneCollegio entity);
		
	    public override SezioneCollegio Assemble(SezioneCollegio entity, SezioneCollegioDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new SezioneCollegio();
	        }
			
			entity.Id = dto.Id;
			entity.SezioneId = dto.SezioneId;
			entity.CollegioId = dto.CollegioId;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override SezioneCollegioDto Assemble(SezioneCollegio entity)
	    {
	        SezioneCollegioDto dto = new SezioneCollegioDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.SezioneId = entity.SezioneId;
			dto.CollegioId = entity.CollegioId;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(SezioneCollegio entity, SezioneCollegioDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();
			dto.Sezione = sezioneAssembler.Assemble(entity.Sezione);

			CollegioAssembler collegioAssembler = new CollegioAssembler();
			dto.Collegio = collegioAssembler.Assemble(entity.Collegio);

	    }
	
	    public override void AssembleCollections(SezioneCollegio entity, SezioneCollegioDto dto)
	    {
	    }
	
	}
	
	
	public partial class SezioneCollegioAssembler : SezioneCollegioAssemblerBase, ISezioneCollegioAssembler
	{
	    
	}
	
	public partial interface IRilevamentoAssembler : IAssembler<RilevamentoDto, Rilevamento>
	{ 
	
	}
	
	public partial class RilevamentoAssemblerBase : Assembler<RilevamentoDto, Rilevamento>
	{
		/// <summary>
	    /// Invoked after the RilevamentoDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="RilevamentoDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(RilevamentoDto dto);
	
		/// <summary>
	    /// Invoked after the Rilevamento instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Rilevamento"/> instance.</param>
		partial void OnEntityAssembled(Rilevamento entity);
		
	    public override Rilevamento Assemble(Rilevamento entity, RilevamentoDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Rilevamento();
	        }
			
			entity.Id = dto.Id;
			entity.Uomini = dto.Uomini;
			entity.Donne = dto.Donne;
			entity.Totale = dto.Totale;
			entity.AffluenzaId = dto.AffluenzaId;
			entity.SezioneId = dto.SezioneId;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override RilevamentoDto Assemble(Rilevamento entity)
	    {
	        RilevamentoDto dto = new RilevamentoDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Uomini = entity.Uomini;
			dto.Donne = entity.Donne;
			dto.Totale = entity.Totale;
			dto.AffluenzaId = entity.AffluenzaId;
			dto.SezioneId = entity.SezioneId;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Rilevamento entity, RilevamentoDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();
			dto.Sezione = sezioneAssembler.Assemble(entity.Sezione);

			AffluenzaAssembler affluenzaAssembler = new AffluenzaAssembler();
			dto.Affluenza = affluenzaAssembler.Assemble(entity.Affluenza);

	    }
	
	    public override void AssembleCollections(Rilevamento entity, RilevamentoDto dto)
	    {
	    }
	
	}
	
	
	public partial class RilevamentoAssembler : RilevamentoAssemblerBase, IRilevamentoAssembler
	{
	    
	}
	
	public partial interface IScrutinioCapoCoalizioneAssembler : IAssembler<ScrutinioCapoCoalizioneDto, ScrutinioCapoCoalizione>
	{ 
	
	}
	
	public partial class ScrutinioCapoCoalizioneAssemblerBase : Assembler<ScrutinioCapoCoalizioneDto, ScrutinioCapoCoalizione>
	{
		/// <summary>
	    /// Invoked after the ScrutinioCapoCoalizioneDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ScrutinioCapoCoalizioneDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ScrutinioCapoCoalizioneDto dto);
	
		/// <summary>
	    /// Invoked after the ScrutinioCapoCoalizione instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="ScrutinioCapoCoalizione"/> instance.</param>
		partial void OnEntityAssembled(ScrutinioCapoCoalizione entity);
		
	    public override ScrutinioCapoCoalizione Assemble(ScrutinioCapoCoalizione entity, ScrutinioCapoCoalizioneDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new ScrutinioCapoCoalizione();
	        }
			
			entity.Id = dto.Id;
			entity.CapoCoalizioneId = dto.CapoCoalizioneId;
			entity.SezioneId = dto.SezioneId;
			entity.Voti = dto.Voti;
			entity.VotiAnnullati = dto.VotiAnnullati;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ScrutinioCapoCoalizioneDto Assemble(ScrutinioCapoCoalizione entity)
	    {
	        ScrutinioCapoCoalizioneDto dto = new ScrutinioCapoCoalizioneDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.CapoCoalizioneId = entity.CapoCoalizioneId;
			dto.SezioneId = entity.SezioneId;
			dto.Voti = entity.Voti;
			dto.VotiAnnullati = entity.VotiAnnullati;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(ScrutinioCapoCoalizione entity, ScrutinioCapoCoalizioneDto dto)
	    {
			CapoCoalizioneAssembler capoCoalizioneAssembler = new CapoCoalizioneAssembler();
			dto.CapoCoalizione = capoCoalizioneAssembler.Assemble(entity.CapoCoalizione);

			SezioneAssembler sezioneAssembler = new SezioneAssembler();
			dto.Sezione = sezioneAssembler.Assemble(entity.Sezione);

	    }
	
	    public override void AssembleCollections(ScrutinioCapoCoalizione entity, ScrutinioCapoCoalizioneDto dto)
	    {
	    }
	
	}
	
	
	public partial class ScrutinioCapoCoalizioneAssembler : ScrutinioCapoCoalizioneAssemblerBase, IScrutinioCapoCoalizioneAssembler
	{
	    
	}
	
	public partial interface IScrutinioAssembler : IAssembler<ScrutinioDto, Scrutinio>
	{ 
	
	}
	
	public partial class ScrutinioAssemblerBase : Assembler<ScrutinioDto, Scrutinio>
	{
		/// <summary>
	    /// Invoked after the ScrutinioDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ScrutinioDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ScrutinioDto dto);
	
		/// <summary>
	    /// Invoked after the Scrutinio instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Scrutinio"/> instance.</param>
		partial void OnEntityAssembled(Scrutinio entity);
		
	    public override Scrutinio Assemble(Scrutinio entity, ScrutinioDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Scrutinio();
	        }
			
			entity.Id = dto.Id;
			entity.Validi = dto.Validi;
			entity.Nulle = dto.Nulle;
			entity.Bianche = dto.Bianche;
			entity.Contestate = dto.Contestate;
			entity.SezioneId = dto.SezioneId;
			entity.ConsultazioneId = dto.ConsultazioneId;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ScrutinioDto Assemble(Scrutinio entity)
	    {
	        ScrutinioDto dto = new ScrutinioDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Validi = entity.Validi;
			dto.Nulle = entity.Nulle;
			dto.Bianche = entity.Bianche;
			dto.Contestate = entity.Contestate;
			dto.SezioneId = entity.SezioneId;
			dto.ConsultazioneId = entity.ConsultazioneId;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Scrutinio entity, ScrutinioDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();
			dto.Sezione = sezioneAssembler.Assemble(entity.Sezione);

			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();
			dto.Consultazione = consultazioneAssembler.Assemble(entity.Consultazione);

	    }
	
	    public override void AssembleCollections(Scrutinio entity, ScrutinioDto dto)
	    {
	    }
	
	}
	
	
	public partial class ScrutinioAssembler : ScrutinioAssemblerBase, IScrutinioAssembler
	{
	    
	}
	
	public partial interface IScrutinioListaAssembler : IAssembler<ScrutinioListaDto, ScrutinioLista>
	{ 
	
	}
	
	public partial class ScrutinioListaAssemblerBase : Assembler<ScrutinioListaDto, ScrutinioLista>
	{
		/// <summary>
	    /// Invoked after the ScrutinioListaDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ScrutinioListaDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ScrutinioListaDto dto);
	
		/// <summary>
	    /// Invoked after the ScrutinioLista instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="ScrutinioLista"/> instance.</param>
		partial void OnEntityAssembled(ScrutinioLista entity);
		
	    public override ScrutinioLista Assemble(ScrutinioLista entity, ScrutinioListaDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new ScrutinioLista();
	        }
			
			entity.Id = dto.Id;
			entity.Voti = dto.Voti;
			entity.ListaId = dto.ListaId;
			entity.SezioneId = dto.SezioneId;
			entity.VotiAnnullati = dto.VotiAnnullati;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ScrutinioListaDto Assemble(ScrutinioLista entity)
	    {
	        ScrutinioListaDto dto = new ScrutinioListaDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Voti = entity.Voti;
			dto.ListaId = entity.ListaId;
			dto.SezioneId = entity.SezioneId;
			dto.VotiAnnullati = entity.VotiAnnullati;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(ScrutinioLista entity, ScrutinioListaDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();
			dto.Sezione = sezioneAssembler.Assemble(entity.Sezione);

			ListaAssembler listaAssembler = new ListaAssembler();
			dto.Lista = listaAssembler.Assemble(entity.Lista);

	    }
	
	    public override void AssembleCollections(ScrutinioLista entity, ScrutinioListaDto dto)
	    {
	    }
	
	}
	
	
	public partial class ScrutinioListaAssembler : ScrutinioListaAssemblerBase, IScrutinioListaAssembler
	{
	    
	}
	
	public partial interface IScrutinioCandidatoAssembler : IAssembler<ScrutinioCandidatoDto, ScrutinioCandidato>
	{ 
	
	}
	
	public partial class ScrutinioCandidatoAssemblerBase : Assembler<ScrutinioCandidatoDto, ScrutinioCandidato>
	{
		/// <summary>
	    /// Invoked after the ScrutinioCandidatoDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="ScrutinioCandidatoDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(ScrutinioCandidatoDto dto);
	
		/// <summary>
	    /// Invoked after the ScrutinioCandidato instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="ScrutinioCandidato"/> instance.</param>
		partial void OnEntityAssembled(ScrutinioCandidato entity);
		
	    public override ScrutinioCandidato Assemble(ScrutinioCandidato entity, ScrutinioCandidatoDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new ScrutinioCandidato();
	        }
			
			entity.Id = dto.Id;
			entity.Voti = dto.Voti;
			entity.SezioneId = dto.SezioneId;
			entity.CandidatoId = dto.CandidatoId;
			entity.VotiAnnullati = dto.VotiAnnullati;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override ScrutinioCandidatoDto Assemble(ScrutinioCandidato entity)
	    {
	        ScrutinioCandidatoDto dto = new ScrutinioCandidatoDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Voti = entity.Voti;
			dto.SezioneId = entity.SezioneId;
			dto.CandidatoId = entity.CandidatoId;
			dto.VotiAnnullati = entity.VotiAnnullati;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(ScrutinioCandidato entity, ScrutinioCandidatoDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();
			dto.Sezione = sezioneAssembler.Assemble(entity.Sezione);

			CandidatoAssembler candidatoAssembler = new CandidatoAssembler();
			dto.Candidato = candidatoAssembler.Assemble(entity.Candidato);

	    }
	
	    public override void AssembleCollections(ScrutinioCandidato entity, ScrutinioCandidatoDto dto)
	    {
	    }
	
	}
	
	
	public partial class ScrutinioCandidatoAssembler : ScrutinioCandidatoAssemblerBase, IScrutinioCandidatoAssembler
	{
	    
	}
	
	public partial interface IOperatoreAssembler : IAssembler<OperatoreDto, Operatore>
	{ 
	
	}
	
	public partial class OperatoreAssemblerBase : Assembler<OperatoreDto, Operatore>
	{
		/// <summary>
	    /// Invoked after the OperatoreDto instance is assembled.
	    /// </summary>
	    /// <param name="dto"><see cref="OperatoreDto"/> The Dto instance.</param>
		partial void OnDTOAssembled(OperatoreDto dto);
	
		/// <summary>
	    /// Invoked after the Operatore instance is assembled.
	    /// </summary>
	    /// <param name="entity">The <see cref="Operatore"/> instance.</param>
		partial void OnEntityAssembled(Operatore entity);
		
	    public override Operatore Assemble(Operatore entity, OperatoreDto dto)
	    {
	        if (entity == null)
	        {
	            entity = new Operatore();
	        }
			
			entity.Id = dto.Id;
			entity.Username = dto.Username;
			entity.Password = dto.Password;
			entity.ConfermaPassword = dto.ConfermaPassword;
			entity.Email = dto.Email;
			entity.Telefono = dto.Telefono;
			entity.Cognome = dto.Cognome;
			entity.Nome = dto.Nome;
			entity.ConsultazioneId = dto.ConsultazioneId;
			entity.Supervisor = dto.Supervisor;
			entity.Amministratore = dto.Amministratore;
			entity.Utente = dto.Utente;
	        this.OnEntityAssembled(entity);
	        return entity;
	    }
	
	    public override OperatoreDto Assemble(Operatore entity)
	    {
	        OperatoreDto dto = new OperatoreDto();
	        
			ObjectKey key = KeyUtility.Instance.Create(entity);
			dto.DtoKey = KeyUtility.Instance.Convert(key);
			dto.Id = entity.Id;
			dto.Username = entity.Username;
			dto.Password = entity.Password;
			dto.ConfermaPassword = entity.ConfermaPassword;
			dto.Email = entity.Email;
			dto.Telefono = entity.Telefono;
			dto.Cognome = entity.Cognome;
			dto.Nome = entity.Nome;
			dto.ConsultazioneId = entity.ConsultazioneId;
			dto.Supervisor = entity.Supervisor;
			dto.Amministratore = entity.Amministratore;
			dto.Utente = entity.Utente;
			this.OnDTOAssembled(dto); 
	        return dto;
	    }
	
	    public override void AssembleReferences(Operatore entity, OperatoreDto dto)
	    {
			ConsultazioneAssembler consultazioneAssembler = new ConsultazioneAssembler();
			dto.Consultazione = consultazioneAssembler.Assemble(entity.Consultazione);

	    }
	
	    public override void AssembleCollections(Operatore entity, OperatoreDto dto)
	    {
			SezioneAssembler sezioneAssembler = new SezioneAssembler();

			dto.Seziones = new List<SezioneDto>();
			foreach (Sezione item in entity.Seziones)
			{
				var dtoItem = sezioneAssembler.Assemble(item);
				dtoItem.Operatore = dto;
				dto.Seziones.Add(dtoItem);
			}

	    }
	
	}
	
	
	public partial class OperatoreAssembler : OperatoreAssemblerBase, IOperatoreAssembler
	{
	    
	}
}
#pragma warning restore 1591
